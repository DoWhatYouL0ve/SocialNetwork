[{"D:\\React\\SocialNetwork\\src\\index.tsx":"1","D:\\React\\SocialNetwork\\src\\Redax\\store.tsx":"2","D:\\React\\SocialNetwork\\src\\components\\News\\news.tsx":"3","D:\\React\\SocialNetwork\\src\\components\\Music\\music.tsx":"4","D:\\React\\SocialNetwork\\src\\components\\Header\\header.tsx":"5","D:\\React\\SocialNetwork\\src\\components\\Profile\\MyPosts\\myposts.tsx":"6","D:\\React\\SocialNetwork\\src\\components\\Profile\\MyPosts\\Post\\post.tsx":"7","D:\\React\\SocialNetwork\\src\\components\\Nav\\nav.tsx":"8","D:\\React\\SocialNetwork\\src\\components\\Profile\\profile.tsx":"9","D:\\React\\SocialNetwork\\src\\components\\Messages\\Messages.tsx":"10","D:\\React\\SocialNetwork\\src\\components\\Messages\\Dialog\\Dialog.tsx":"11","D:\\React\\SocialNetwork\\src\\App.tsx":"12","D:\\React\\SocialNetwork\\src\\components\\Messages\\Message\\message.tsx":"13","D:\\React\\SocialNetwork\\src\\reportWebVitals.ts":"14","D:\\React\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\profileInfo.tsx":"15","D:\\React\\SocialNetwork\\src\\Redax\\messages-reducer.tsx":"16","D:\\React\\SocialNetwork\\src\\Redax\\profile-reducer.tsx":"17","D:\\React\\SocialNetwork\\src\\components\\Settings\\settings.tsx":"18","D:\\React\\SocialNetwork\\src\\Redax\\redux-store.tsx":"19","D:\\React\\SocialNetwork\\src\\Redax\\sidebar-reducer.tsx":"20","D:\\React\\SocialNetwork\\src\\components\\Profile\\MyPosts\\mypostsContainer.tsx":"21","D:\\React\\SocialNetwork\\src\\components\\Messages\\MessagesContainer.tsx":"22","D:\\React\\SocialNetwork\\src\\components\\Users\\UsersContainer.tsx":"23","D:\\React\\SocialNetwork\\src\\Redax\\users-reducer.tsx":"24","D:\\React\\SocialNetwork\\src\\components\\Users\\Users.tsx":"25","D:\\React\\SocialNetwork\\src\\components\\common\\Preloader\\Preloader.tsx":"26","D:\\React\\SocialNetwork\\src\\components\\Profile\\ProfileContainer.tsx":"27"},{"size":678,"mtime":1617770866090,"results":"28","hashOfConfig":"29"},{"size":3205,"mtime":1616928628938,"results":"30","hashOfConfig":"29"},{"size":175,"mtime":1614820329783,"results":"31","hashOfConfig":"29"},{"size":178,"mtime":1614820329782,"results":"32","hashOfConfig":"29"},{"size":278,"mtime":1614820329780,"results":"33","hashOfConfig":"29"},{"size":1340,"mtime":1617774037232,"results":"34","hashOfConfig":"29"},{"size":541,"mtime":1614820329784,"results":"35","hashOfConfig":"29"},{"size":1079,"mtime":1617857814646,"results":"36","hashOfConfig":"29"},{"size":518,"mtime":1620819098801,"results":"37","hashOfConfig":"29"},{"size":1814,"mtime":1620816518443,"results":"38","hashOfConfig":"29"},{"size":402,"mtime":1617548987378,"results":"39","hashOfConfig":"29"},{"size":1514,"mtime":1620975741927,"results":"40","hashOfConfig":"29"},{"size":268,"mtime":1614820329781,"results":"41","hashOfConfig":"29"},{"size":440,"mtime":1614820329787,"results":"42","hashOfConfig":"29"},{"size":586,"mtime":1620819137857,"results":"43","hashOfConfig":"29"},{"size":1779,"mtime":1617788971793,"results":"44","hashOfConfig":"29"},{"size":2644,"mtime":1620817257252,"results":"45","hashOfConfig":"29"},{"size":187,"mtime":1614820329786,"results":"46","hashOfConfig":"29"},{"size":1280,"mtime":1620808751890,"results":"47","hashOfConfig":"29"},{"size":178,"mtime":1617549702919,"results":"48","hashOfConfig":"29"},{"size":1129,"mtime":1617559467495,"results":"49","hashOfConfig":"29"},{"size":1077,"mtime":1617548739380,"results":"50","hashOfConfig":"29"},{"size":5413,"mtime":1620808819230,"results":"51","hashOfConfig":"29"},{"size":2686,"mtime":1620808689025,"results":"52","hashOfConfig":"29"},{"size":2079,"mtime":1620819338856,"results":"53","hashOfConfig":"29"},{"size":288,"mtime":1620807199340,"results":"54","hashOfConfig":"29"},{"size":2040,"mtime":1620975512080,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1v6zfw1",{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\SocialNetwork\\src\\index.tsx",[],["122","123"],"D:\\React\\SocialNetwork\\src\\Redax\\store.tsx",["124","125","126","127"],"import {\r\n    ADD_POST,\r\n    addPostActionCreator,\r\n    profileReducer,\r\n    UPDATE_NEW_POST_TEXT,\r\n    updateNewPostTextActionCreator\r\n} from \"./profile-reducer\";\r\nimport {\r\n    messagesReducer,\r\n    SEND_MESSAGE, sentMessageActionCreator,\r\n    UPDATE_NEW_MESSAGE_TEXT,\r\n    updateNewMessageTextActionCreator\r\n} from \"./messages-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nexport type DialogType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport type PostMessageType = {\r\n    id: number\r\n    like: number\r\n    postMessage: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    postMessageData: Array<PostMessageType>\r\n    newPostText: string\r\n}\r\n\r\nexport type MessagesPageType = {\r\n    dialogsData: Array<DialogType>\r\n    messagesData: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nexport type StateType = {\r\n    profilePage: ProfilePageType\r\n    messagesPage: MessagesPageType\r\n    sidebar: {}\r\n}\r\n\r\n// an example of auto type difinition for our action creator functions\r\nexport type ActionTypes = ReturnType<typeof addPostActionCreator> | ReturnType<typeof updateNewPostTextActionCreator> | ReturnType<typeof updateNewMessageTextActionCreator> | ReturnType<typeof sentMessageActionCreator>\r\n\r\n\r\nexport type StoreType = {\r\n    _state: StateType\r\n    subscribe: (observer: () => void) => void\r\n    _callSubscriber: () => void\r\n    getState: () => StateType\r\n    dispatch: (action: ActionTypes) => void\r\n}\r\n\r\nexport let store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            newPostText: '',\r\n            postMessageData: [\r\n                {id: 1, like: 15, postMessage: 'Hi, how are you?'},\r\n                {id: 2, like: 15, postMessage: \"it'styles my firts post\"},\r\n                {id: 3, like: 15, postMessage: \"I'm OK\"}\r\n            ]},\r\n\r\n        messagesPage: {\r\n            dialogsData: [\r\n                {id: 1, name: 'Dimych'},\r\n                {id: 2, name: 'Bob'},\r\n                {id: 3, name: 'Jack'},\r\n                {id: 4, name: 'Tom'},\r\n                {id: 5, name: 'Helen'},\r\n                {id: 6, name: 'Daniel'}\r\n            ],\r\n            messagesData: [\r\n                {id: 1, message: 'Hi'},\r\n                {id: 2, message: 'How are you?'},\r\n                {id: 3, message: 'Did you go to the cinema yesterday?'},\r\n                {id: 4, message: 'have you ever ride a horse?'},\r\n                {id: 5, message: 'Nice to see you'},\r\n                {id: 6, message: 'God bless this moment'}\r\n            ],\r\n            newMessageText: ''\r\n        },\r\n\r\n        sidebar: {}\r\n    },\r\n    _callSubscriber () {\r\n        console.log('State is changed')\r\n    },\r\n    getState () {\r\n        return this._state\r\n    },\r\n    subscribe (observer) {\r\n    this._callSubscriber = observer // pattern observer похож на pattern publisher\r\n    },\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.messagesPage = messagesReducer(this._state.messagesPage, action)\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action)\r\n\r\n        this._callSubscriber()\r\n    }\r\n}\r\n",["128","129"],"D:\\React\\SocialNetwork\\src\\components\\News\\news.tsx",["130"],"import React from \"react\";\r\nimport s from './news.module.css'\r\n\r\nexport const News = (props: any) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}",["131","132"],"D:\\React\\SocialNetwork\\src\\components\\Music\\music.tsx",["133"],"import React from \"react\";\r\nimport s from './music.module.css'\r\n\r\nexport const Music = (props: any) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","D:\\React\\SocialNetwork\\src\\components\\Header\\header.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Profile\\MyPosts\\myposts.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Profile\\MyPosts\\Post\\post.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Nav\\nav.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Profile\\profile.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Messages\\Messages.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Messages\\Dialog\\Dialog.tsx",[],"D:\\React\\SocialNetwork\\src\\App.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Messages\\Message\\message.tsx",[],["134","135"],"D:\\React\\SocialNetwork\\src\\reportWebVitals.ts",[],["136","137"],"D:\\React\\SocialNetwork\\src\\components\\Profile\\ProfileInfo\\profileInfo.tsx",["138","139"],"D:\\React\\SocialNetwork\\src\\Redax\\messages-reducer.tsx",[],"D:\\React\\SocialNetwork\\src\\Redax\\profile-reducer.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Settings\\settings.tsx",["140"],"import React from \"react\";\r\nimport s from './settings.module.css'\r\n\r\nexport const Settings = (props: any) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}","D:\\React\\SocialNetwork\\src\\Redax\\redux-store.tsx",[],"D:\\React\\SocialNetwork\\src\\Redax\\sidebar-reducer.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Profile\\MyPosts\\mypostsContainer.tsx",["141"],"import React from \"react\";\r\nimport {\r\n    addPostActionCreator,\r\n    PostMessageType,\r\n    updateNewPostTextActionCreator\r\n} from \"../../../Redax/profile-reducer\";\r\nimport {MyPosts} from \"./myposts\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from 'redux'\r\nimport {AppStateType} from \"../../../Redax/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    newPostText: string\r\n    postMessageData: PostMessageType[]\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    addPost: () => void\r\n    newPostChange: (text: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postMessageData: state.profilePage.postMessageData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        newPostChange: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)",["142","143"],"D:\\React\\SocialNetwork\\src\\components\\Messages\\MessagesContainer.tsx",["144"],"import React from \"react\";\r\nimport {\r\n    InitialStateType,\r\n    sentMessageActionCreator,\r\n    updateNewMessageTextActionCreator\r\n} from \"../../Redax/messages-reducer\";\r\nimport {Messages} from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from 'redux'\r\nimport {AppStateType} from \"../../Redax/redux-store\";\r\n\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    messagesPage: InitialStateType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    onNewMessageChange: (text: string) => void\r\n    onSendMessageClick: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        onNewMessageChange: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text))\r\n        },\r\n        onSendMessageClick: () => {\r\n            dispatch(sentMessageActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nexport const MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages)","D:\\React\\SocialNetwork\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\React\\SocialNetwork\\src\\Redax\\users-reducer.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\Users\\Users.tsx",[],"D:\\React\\SocialNetwork\\src\\components\\common\\Preloader\\Preloader.tsx",["145"],"D:\\React\\SocialNetwork\\src\\components\\Profile\\ProfileContainer.tsx",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":5,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":5,"column":5,"nodeType":"152","messageId":"153","endLine":5,"endColumn":25},{"ruleId":"150","severity":1,"message":"155","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":17},{"ruleId":"150","severity":1,"message":"156","line":11,"column":5,"nodeType":"152","messageId":"153","endLine":11,"endColumn":28},{"ruleId":"146","replacedBy":"157"},{"ruleId":"148","replacedBy":"158"},{"ruleId":"150","severity":1,"message":"159","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":9},{"ruleId":"146","replacedBy":"160"},{"ruleId":"148","replacedBy":"161"},{"ruleId":"150","severity":1,"message":"159","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":9},{"ruleId":"146","replacedBy":"162"},{"ruleId":"148","replacedBy":"163"},{"ruleId":"146","replacedBy":"164"},{"ruleId":"148","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":13,"column":17,"nodeType":"168","endLine":13,"endColumn":113},{"ruleId":"169","severity":1,"message":"170","line":16,"column":17,"nodeType":"168","endLine":16,"endColumn":56},{"ruleId":"150","severity":1,"message":"159","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":9},{"ruleId":"150","severity":1,"message":"171","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"146","replacedBy":"172"},{"ruleId":"148","replacedBy":"173"},{"ruleId":"150","severity":1,"message":"171","line":1,"column":8,"nodeType":"152","messageId":"153","endLine":1,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":8,"column":13,"nodeType":"168","endLine":8,"endColumn":35},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"@typescript-eslint/no-unused-vars","'ADD_POST' is defined but never used.","Identifier","unusedVar","'UPDATE_NEW_POST_TEXT' is defined but never used.","'SEND_MESSAGE' is defined but never used.","'UPDATE_NEW_MESSAGE_TEXT' is defined but never used.",["174"],["175"],"'s' is defined but never used.",["174"],["175"],["174"],["175"],["174"],["175"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'React' is defined but never used.",["174"],["175"],"no-global-assign","no-unsafe-negation"]